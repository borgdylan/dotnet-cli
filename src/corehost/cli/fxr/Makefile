# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.2

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list

# Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/dylan/Desktop/git/dotnet-cli/src/corehost

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/dylan/Desktop/git/dotnet-cli/src/corehost

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: install/strip
.PHONY : install/strip/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/usr/bin/cmake-gui -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: install/local
.PHONY : install/local/fast

# The main all target
all: cmake_check_build_system
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(CMAKE_COMMAND) -E cmake_progress_start /home/dylan/Desktop/git/dotnet-cli/src/corehost/CMakeFiles /home/dylan/Desktop/git/dotnet-cli/src/corehost/cli/fxr/CMakeFiles/progress.marks
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f CMakeFiles/Makefile2 cli/fxr/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/dylan/Desktop/git/dotnet-cli/src/corehost/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f CMakeFiles/Makefile2 cli/fxr/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f CMakeFiles/Makefile2 cli/fxr/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f CMakeFiles/Makefile2 cli/fxr/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
cli/fxr/CMakeFiles/hostfxr.dir/rule:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f CMakeFiles/Makefile2 cli/fxr/CMakeFiles/hostfxr.dir/rule
.PHONY : cli/fxr/CMakeFiles/hostfxr.dir/rule

# Convenience name for target.
hostfxr: cli/fxr/CMakeFiles/hostfxr.dir/rule
.PHONY : hostfxr

# fast build rule for target.
hostfxr/fast:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/build
.PHONY : hostfxr/fast

__/__/common/pal.unix.o: __/__/common/pal.unix.cpp.o
.PHONY : __/__/common/pal.unix.o

# target to build an object file
__/__/common/pal.unix.cpp.o:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/__/common/pal.unix.cpp.o
.PHONY : __/__/common/pal.unix.cpp.o

__/__/common/pal.unix.i: __/__/common/pal.unix.cpp.i
.PHONY : __/__/common/pal.unix.i

# target to preprocess a source file
__/__/common/pal.unix.cpp.i:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/__/common/pal.unix.cpp.i
.PHONY : __/__/common/pal.unix.cpp.i

__/__/common/pal.unix.s: __/__/common/pal.unix.cpp.s
.PHONY : __/__/common/pal.unix.s

# target to generate assembly for a file
__/__/common/pal.unix.cpp.s:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/__/common/pal.unix.cpp.s
.PHONY : __/__/common/pal.unix.cpp.s

__/__/common/trace.o: __/__/common/trace.cpp.o
.PHONY : __/__/common/trace.o

# target to build an object file
__/__/common/trace.cpp.o:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/__/common/trace.cpp.o
.PHONY : __/__/common/trace.cpp.o

__/__/common/trace.i: __/__/common/trace.cpp.i
.PHONY : __/__/common/trace.i

# target to preprocess a source file
__/__/common/trace.cpp.i:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/__/common/trace.cpp.i
.PHONY : __/__/common/trace.cpp.i

__/__/common/trace.s: __/__/common/trace.cpp.s
.PHONY : __/__/common/trace.s

# target to generate assembly for a file
__/__/common/trace.cpp.s:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/__/common/trace.cpp.s
.PHONY : __/__/common/trace.cpp.s

__/__/common/utils.o: __/__/common/utils.cpp.o
.PHONY : __/__/common/utils.o

# target to build an object file
__/__/common/utils.cpp.o:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/__/common/utils.cpp.o
.PHONY : __/__/common/utils.cpp.o

__/__/common/utils.i: __/__/common/utils.cpp.i
.PHONY : __/__/common/utils.i

# target to preprocess a source file
__/__/common/utils.cpp.i:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/__/common/utils.cpp.i
.PHONY : __/__/common/utils.cpp.i

__/__/common/utils.s: __/__/common/utils.cpp.s
.PHONY : __/__/common/utils.s

# target to generate assembly for a file
__/__/common/utils.cpp.s:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/__/common/utils.cpp.s
.PHONY : __/__/common/utils.cpp.s

__/json/casablanca/src/json/json.o: __/json/casablanca/src/json/json.cpp.o
.PHONY : __/json/casablanca/src/json/json.o

# target to build an object file
__/json/casablanca/src/json/json.cpp.o:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/json/casablanca/src/json/json.cpp.o
.PHONY : __/json/casablanca/src/json/json.cpp.o

__/json/casablanca/src/json/json.i: __/json/casablanca/src/json/json.cpp.i
.PHONY : __/json/casablanca/src/json/json.i

# target to preprocess a source file
__/json/casablanca/src/json/json.cpp.i:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/json/casablanca/src/json/json.cpp.i
.PHONY : __/json/casablanca/src/json/json.cpp.i

__/json/casablanca/src/json/json.s: __/json/casablanca/src/json/json.cpp.s
.PHONY : __/json/casablanca/src/json/json.s

# target to generate assembly for a file
__/json/casablanca/src/json/json.cpp.s:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/json/casablanca/src/json/json.cpp.s
.PHONY : __/json/casablanca/src/json/json.cpp.s

__/json/casablanca/src/json/json_parsing.o: __/json/casablanca/src/json/json_parsing.cpp.o
.PHONY : __/json/casablanca/src/json/json_parsing.o

# target to build an object file
__/json/casablanca/src/json/json_parsing.cpp.o:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/json/casablanca/src/json/json_parsing.cpp.o
.PHONY : __/json/casablanca/src/json/json_parsing.cpp.o

__/json/casablanca/src/json/json_parsing.i: __/json/casablanca/src/json/json_parsing.cpp.i
.PHONY : __/json/casablanca/src/json/json_parsing.i

# target to preprocess a source file
__/json/casablanca/src/json/json_parsing.cpp.i:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/json/casablanca/src/json/json_parsing.cpp.i
.PHONY : __/json/casablanca/src/json/json_parsing.cpp.i

__/json/casablanca/src/json/json_parsing.s: __/json/casablanca/src/json/json_parsing.cpp.s
.PHONY : __/json/casablanca/src/json/json_parsing.s

# target to generate assembly for a file
__/json/casablanca/src/json/json_parsing.cpp.s:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/json/casablanca/src/json/json_parsing.cpp.s
.PHONY : __/json/casablanca/src/json/json_parsing.cpp.s

__/json/casablanca/src/json/json_serialization.o: __/json/casablanca/src/json/json_serialization.cpp.o
.PHONY : __/json/casablanca/src/json/json_serialization.o

# target to build an object file
__/json/casablanca/src/json/json_serialization.cpp.o:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/json/casablanca/src/json/json_serialization.cpp.o
.PHONY : __/json/casablanca/src/json/json_serialization.cpp.o

__/json/casablanca/src/json/json_serialization.i: __/json/casablanca/src/json/json_serialization.cpp.i
.PHONY : __/json/casablanca/src/json/json_serialization.i

# target to preprocess a source file
__/json/casablanca/src/json/json_serialization.cpp.i:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/json/casablanca/src/json/json_serialization.cpp.i
.PHONY : __/json/casablanca/src/json/json_serialization.cpp.i

__/json/casablanca/src/json/json_serialization.s: __/json/casablanca/src/json/json_serialization.cpp.s
.PHONY : __/json/casablanca/src/json/json_serialization.s

# target to generate assembly for a file
__/json/casablanca/src/json/json_serialization.cpp.s:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/json/casablanca/src/json/json_serialization.cpp.s
.PHONY : __/json/casablanca/src/json/json_serialization.cpp.s

__/json/casablanca/src/utilities/asyncrt_utils.o: __/json/casablanca/src/utilities/asyncrt_utils.cpp.o
.PHONY : __/json/casablanca/src/utilities/asyncrt_utils.o

# target to build an object file
__/json/casablanca/src/utilities/asyncrt_utils.cpp.o:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/json/casablanca/src/utilities/asyncrt_utils.cpp.o
.PHONY : __/json/casablanca/src/utilities/asyncrt_utils.cpp.o

__/json/casablanca/src/utilities/asyncrt_utils.i: __/json/casablanca/src/utilities/asyncrt_utils.cpp.i
.PHONY : __/json/casablanca/src/utilities/asyncrt_utils.i

# target to preprocess a source file
__/json/casablanca/src/utilities/asyncrt_utils.cpp.i:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/json/casablanca/src/utilities/asyncrt_utils.cpp.i
.PHONY : __/json/casablanca/src/utilities/asyncrt_utils.cpp.i

__/json/casablanca/src/utilities/asyncrt_utils.s: __/json/casablanca/src/utilities/asyncrt_utils.cpp.s
.PHONY : __/json/casablanca/src/utilities/asyncrt_utils.s

# target to generate assembly for a file
__/json/casablanca/src/utilities/asyncrt_utils.cpp.s:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/json/casablanca/src/utilities/asyncrt_utils.cpp.s
.PHONY : __/json/casablanca/src/utilities/asyncrt_utils.cpp.s

__/libhost.o: __/libhost.cpp.o
.PHONY : __/libhost.o

# target to build an object file
__/libhost.cpp.o:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/libhost.cpp.o
.PHONY : __/libhost.cpp.o

__/libhost.i: __/libhost.cpp.i
.PHONY : __/libhost.i

# target to preprocess a source file
__/libhost.cpp.i:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/libhost.cpp.i
.PHONY : __/libhost.cpp.i

__/libhost.s: __/libhost.cpp.s
.PHONY : __/libhost.s

# target to generate assembly for a file
__/libhost.cpp.s:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/libhost.cpp.s
.PHONY : __/libhost.cpp.s

__/runtime_config.o: __/runtime_config.cpp.o
.PHONY : __/runtime_config.o

# target to build an object file
__/runtime_config.cpp.o:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/runtime_config.cpp.o
.PHONY : __/runtime_config.cpp.o

__/runtime_config.i: __/runtime_config.cpp.i
.PHONY : __/runtime_config.i

# target to preprocess a source file
__/runtime_config.cpp.i:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/runtime_config.cpp.i
.PHONY : __/runtime_config.cpp.i

__/runtime_config.s: __/runtime_config.cpp.s
.PHONY : __/runtime_config.s

# target to generate assembly for a file
__/runtime_config.cpp.s:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/__/runtime_config.cpp.s
.PHONY : __/runtime_config.cpp.s

fx_muxer.o: fx_muxer.cpp.o
.PHONY : fx_muxer.o

# target to build an object file
fx_muxer.cpp.o:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/fx_muxer.cpp.o
.PHONY : fx_muxer.cpp.o

fx_muxer.i: fx_muxer.cpp.i
.PHONY : fx_muxer.i

# target to preprocess a source file
fx_muxer.cpp.i:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/fx_muxer.cpp.i
.PHONY : fx_muxer.cpp.i

fx_muxer.s: fx_muxer.cpp.s
.PHONY : fx_muxer.s

# target to generate assembly for a file
fx_muxer.cpp.s:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/fx_muxer.cpp.s
.PHONY : fx_muxer.cpp.s

fx_ver.o: fx_ver.cpp.o
.PHONY : fx_ver.o

# target to build an object file
fx_ver.cpp.o:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/fx_ver.cpp.o
.PHONY : fx_ver.cpp.o

fx_ver.i: fx_ver.cpp.i
.PHONY : fx_ver.i

# target to preprocess a source file
fx_ver.cpp.i:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/fx_ver.cpp.i
.PHONY : fx_ver.cpp.i

fx_ver.s: fx_ver.cpp.s
.PHONY : fx_ver.s

# target to generate assembly for a file
fx_ver.cpp.s:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/fx_ver.cpp.s
.PHONY : fx_ver.cpp.s

hostfxr.o: hostfxr.cpp.o
.PHONY : hostfxr.o

# target to build an object file
hostfxr.cpp.o:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/hostfxr.cpp.o
.PHONY : hostfxr.cpp.o

hostfxr.i: hostfxr.cpp.i
.PHONY : hostfxr.i

# target to preprocess a source file
hostfxr.cpp.i:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/hostfxr.cpp.i
.PHONY : hostfxr.cpp.i

hostfxr.s: hostfxr.cpp.s
.PHONY : hostfxr.s

# target to generate assembly for a file
hostfxr.cpp.s:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(MAKE) -f cli/fxr/CMakeFiles/hostfxr.dir/build.make cli/fxr/CMakeFiles/hostfxr.dir/hostfxr.cpp.s
.PHONY : hostfxr.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... install/strip"
	@echo "... edit_cache"
	@echo "... rebuild_cache"
	@echo "... install"
	@echo "... hostfxr"
	@echo "... list_install_components"
	@echo "... install/local"
	@echo "... __/__/common/pal.unix.o"
	@echo "... __/__/common/pal.unix.i"
	@echo "... __/__/common/pal.unix.s"
	@echo "... __/__/common/trace.o"
	@echo "... __/__/common/trace.i"
	@echo "... __/__/common/trace.s"
	@echo "... __/__/common/utils.o"
	@echo "... __/__/common/utils.i"
	@echo "... __/__/common/utils.s"
	@echo "... __/json/casablanca/src/json/json.o"
	@echo "... __/json/casablanca/src/json/json.i"
	@echo "... __/json/casablanca/src/json/json.s"
	@echo "... __/json/casablanca/src/json/json_parsing.o"
	@echo "... __/json/casablanca/src/json/json_parsing.i"
	@echo "... __/json/casablanca/src/json/json_parsing.s"
	@echo "... __/json/casablanca/src/json/json_serialization.o"
	@echo "... __/json/casablanca/src/json/json_serialization.i"
	@echo "... __/json/casablanca/src/json/json_serialization.s"
	@echo "... __/json/casablanca/src/utilities/asyncrt_utils.o"
	@echo "... __/json/casablanca/src/utilities/asyncrt_utils.i"
	@echo "... __/json/casablanca/src/utilities/asyncrt_utils.s"
	@echo "... __/libhost.o"
	@echo "... __/libhost.i"
	@echo "... __/libhost.s"
	@echo "... __/runtime_config.o"
	@echo "... __/runtime_config.i"
	@echo "... __/runtime_config.s"
	@echo "... fx_muxer.o"
	@echo "... fx_muxer.i"
	@echo "... fx_muxer.s"
	@echo "... fx_ver.o"
	@echo "... fx_ver.i"
	@echo "... fx_ver.s"
	@echo "... hostfxr.o"
	@echo "... hostfxr.i"
	@echo "... hostfxr.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/dylan/Desktop/git/dotnet-cli/src/corehost && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system


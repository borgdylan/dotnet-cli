.\" Automatically generated by Pandoc 1.15.1
.\"
.hy
.TH "dotnet-native" "1" "" "" ""
.SH dotnet\-compile
.SH NAME
.PP
dotnet\-compile\-native \-\- Compiles IL binaries to native binaries.
.SH SYNOPSIS
.PP
dotnet compile options (#options)
.SH DESCRIPTION
.PP
The \f[C]compile\-native\f[] command compiles IL assemblies to native
machine code.
It is used by \f[C]dotnet\-compile\ \-\-native\f[].
.PP
The output is a native exe that conforms to the architecture of the
underlying operating system (i.e.
running on 64\-bit OS will produce a native 64\-bit exe).
This can be overriden via the \-\-arch switch and specifying the wanted
architecture.
The executable has a default extension of "" on Linux and OS X and
".exe" on Windows.
The source must include a `static void Main(string[] args) entry point
and specify compilerOptions.emitEntryPoint in the project.json.
.PP
Output files are written to the child \f[C]bin\f[] folder, which will be
created if it doesn\[aq]t exist.
Files will be overwritten as needed.
.SH Options
.PP
\-\-appdepsdk Path to custom AppDepSDK
.PP
\-c, \-\-configuration [debug|release] Build configuration.
Defaults to \f[C]debug\f[].
.PP
\-\-ilcargs Custom arguments for the IL Compiler.
.PP
\-\-ilcpath Path to a custom ilc.exe
.PP
\-\-linklib Path to static lib to link
.PP
\-\-logpath Enables logging and writes native compilation logs to the
given path.
.PP
\-m, \-\-mode [cpp|ryujit|custom] Code generation mode.
Defaults to ryujit.
.PP
\-o, \-\-out directoryname Output directory for the native executable.
.PP
\-r, \-\-reference Path to a managed dll reference for the app.
.PP
\-t, \-\-temp\-out Specifies temporary directory for intermediate files.
.PP
\-v, \-\-verbose Prints verbose logging information, to follow the flow
of execution of the command.

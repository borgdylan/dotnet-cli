.\" Automatically generated by Pandoc 1.15.1
.\"
.hy
.TH "dotnet-publish" "1" "" "" ""
.SH dotnet\-publish
.SH NAME
.PP
\f[C]dotnet\-publish\f[] > packs the application and all of its
dependencies into a folder getting it ready for publishing
.SH SYNOPSIS
.PP
\f[C]dotnet\-publish\ [options]\ [project]\f[]
.SH DESCRIPTION
.PP
\f[C]dotnet\-publish\f[] will compile the application, read through its
dependencies specified in \f[I]project.json\f[] and publish the
resulting set of files to a directory.
This directory contains the assemblies, the runtime as well as the
runnable version of the application.
This directory can then be moved to a different machine and the
application will be able to be ran regardless of existence of any other
runtime.
.PP
\f[C]dotnet\-publish\f[] needs access to \f[I]project.json\f[] to work.
If it is not specified on invocation via [project],
\f[I]project.json\f[] in the current directory will be the default.
If no \f[I]project.json\f[] can be found, \f[C]dotnet\-publish\f[] will
error out.
.PP
The command also requires information on the targeted framework and
runtime, both of which can be specified on the command line.
If the runtime is not specified, the command will default to the runtime
for the current operating system.
If the framework is not specified, the command will read the information
from the \f[I]project.json\f[] file.
In case of no valid framework found, the command will error out.
In case of multiple valid frameworks found, the command will publish for
all valid frameworks.
.SH Options
.PP
\f[C]\-f\f[], \f[C]\-\-framework\f[] [FID]
.PP
Publish the application for a given framework identifier (FID).
If not specified, FID is read from \f[I]project.json\f[].
.PP
\f[C]\-r\f[], \f[C]\-\-runtime\f[] [RID]
.PP
Publish the application for a given runtime.
Supported values for runtimes at this time are:
.IP
.nf
\f[C]
*\ ubuntu.14.04\-x64
*\ win7\-x64
*\ osx.10.10\-x64
\f[]
.fi
.PP
\f[C]\-o\f[], \f[C]\-\-output\f[]
.PP
Specify the path where to place the directory.
If not specified, will default to
\f[I]\&./bin/[configuration]/[framework]/[runtime]/\f[]
.PP
\f[C]\-c\f[], \f[C]\-\-configuration\ [Debug|Release]\f[]
.PP
Configuration to use when publishing.
If not specified, will default to "Debug".
.SH EXAMPLES
.PP
\f[C]dotnet\-publish\f[] >Publish the current application using the
\f[I]project.json\f[] framework and runtime for the current operating
system.
.PP
\f[C]dotnet\-publish\ ~/projects/app1/project.json\f[] >Publish the
application using the specified \f[I]project.json\f[]; also use
framework specified withing and runtime for the current operating
system.
.PP
\f[C]dotnet\-publish\ \-\-framework\ dnxcore50\f[] >Publish the current
application using the \f[C]dnxcore50\f[] framework and runtime for the
current operating system.
.PP
\f[C]dotnet\-publish\ \-\-framework\ dnxcore50\ \-\-runtime\ osx.10.10\-x64\f[]
>Publish the current application using the \f[C]dnxcore50\f[] framework
and runtime for \f[C]OS\ X\ 10.10\f[]
.SH SEE ALSO
.PP
\f[C]dotnet\-restore\f[]
